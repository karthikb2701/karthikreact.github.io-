{"ast":null,"code":"import React from'react';import{Circle,MapContainer,Popup,TileLayer,useMap}from'react-leaflet';import'leaflet/dist/leaflet.css';import'../sass/component/Map.scss';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Op(_ref){var data=_ref.data,caseType=_ref.caseType,stateData=_ref.stateData;var casesTypeColors={confirmedCasesIndian:{hex:'#CC1034'},recovered:{hex:'#7dd71d'},deaths:{hex:'#000'}};function sort(n){if(n<300){return n*400;}else if(n<500){return n*100;}else if(n<2000){return n*30;}else if(n<7000){return n*15;}else if(n<15000){return n*8;}else if(n<25000){return n*4;}else if(n<40000){return n*5;}else{return n;}}return data.map(function(i,j){return/*#__PURE__*/_jsx(Circle,{center:[i.lat,i.lng],pathOptions:{color:null,fillColor:casesTypeColors[caseType].hex},radius:sort(stateData[j].deaths),children:/*#__PURE__*/_jsxs(Popup,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Country: \",i.loc,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Confirmed: \",stateData[j].confirmedCasesIndian]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Recoverd: \",stateData[j].discharged]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Deaths: \",stateData[j].deaths]})]})},j);});}function SetViewOnClick(_ref2){var coords=_ref2.coords,zoom=_ref2.zoom;console.log(coords);var map=useMap();map.setView(coords,zoom);return null;}var Map=function Map(_ref3){var coords=_ref3.coords,zoom=_ref3.zoom,data=_ref3.data,caseType=_ref3.caseType,stateData=_ref3.stateData;if(stateData.length==[]){return/*#__PURE__*/_jsx(\"h1\",{children:\"Loading..\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"main_map\",children:/*#__PURE__*/_jsxs(MapContainer,{center:coords,zoom:zoom,zoomAnimation:true,scrollWheelZoom:true,dragging:false,style:{height:'90vh',width:'37vw'},children:[/*#__PURE__*/_jsx(TileLayer// attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),/*#__PURE__*/_jsx(SetViewOnClick,{coords:coords,zoom:zoom}),/*#__PURE__*/_jsx(Op,{data:data,caseType:caseType,stateData:stateData})]})});};export default Map;","map":{"version":3,"sources":["C:/Users/Karthik/Desktop/project/covid19tracker-main/src/component/Map.jsx"],"names":["React","Circle","MapContainer","Popup","TileLayer","useMap","Op","data","caseType","stateData","casesTypeColors","confirmedCasesIndian","hex","recovered","deaths","sort","n","map","i","j","lat","lng","color","fillColor","loc","discharged","SetViewOnClick","coords","zoom","console","log","setView","Map","length","height","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Circle, MapContainer, Popup, TileLayer, useMap } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport '../sass/component/Map.scss'\n\nfunction Op({ data, caseType, stateData }) {\n  const casesTypeColors = {\n    confirmedCasesIndian: {\n      hex: '#CC1034',\n    },\n    recovered: {\n      hex: '#7dd71d',\n    },\n    deaths: {\n      hex: '#000',\n    },\n  }\n\n  function sort(n) {\n    if (n < 300) {\n      return n * 400\n    } else if (n < 500) {\n      return n * 100\n    } else if (n < 2000) {\n      return n * 30\n    } else if (n < 7000) {\n      return n * 15\n    } else if (n < 15000) {\n      return n * 8\n    } else if (n < 25000) {\n      return n * 4\n    } else if (n < 40000) {\n      return n * 5\n    } else {\n      return n\n    }\n  }\n\n  return data.map((i, j) => (\n    <Circle\n      key={j}\n      center={[i.lat, i.lng]}\n      pathOptions={{\n        color: null,\n        fillColor: casesTypeColors[caseType].hex,\n      }}\n      radius={sort(stateData[j].deaths)}\n    >\n      <Popup>\n        <div>Country: {i.loc} </div>\n        <div>Confirmed: {stateData[j].confirmedCasesIndian}</div>\n        <div>Recoverd: {stateData[j].discharged}</div>\n        <div>Deaths: {stateData[j].deaths}</div>\n      </Popup>\n    </Circle>\n  ))\n}\n\nfunction SetViewOnClick({ coords, zoom }) {\n  console.log(coords)\n  const map = useMap()\n  map.setView(coords, zoom)\n  return null\n}\n\nconst Map = ({ coords, zoom, data, caseType, stateData }) => {\n  if (stateData.length == []) {\n    return <h1>Loading..</h1>\n  }\n\n  return (\n    <div className=\"main_map\">\n      <MapContainer\n        center={coords}\n        zoom={zoom}\n        zoomAnimation={true}\n        scrollWheelZoom={true}\n        dragging={false}\n        style={{ height: '90vh', width: '37vw' }}\n      >\n        <TileLayer\n          // attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <SetViewOnClick coords={coords} zoom={zoom} />\n\n        <Op data={data} caseType={caseType} stateData={stateData} />\n      </MapContainer>\n    </div>\n  )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}